<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Patient Dashboard</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div id="patientDashboard">
        <h1 style="color: #e12454;">Welcome</h1>

        <section id="upcomingAppointments">
            <h2>Upcoming Appointments</h2>
            <ul id="appointmentsList">
                <!-- Appointments will be populated here -->
            </ul>
            <div id="spinner" class="spinner"></div> <!-- Spinner placed outside appointments container -->
        </section>

        <section id="prescriptionHistory">
            <h2>Prescription History</h2>
            <ul id="prescriptionsList">
                <!-- Prescriptions will be populated here -->
            </ul>
        </section>

        <section id="appointmentBooking">
            <h2>Book an Appointment</h2>
            <form id="bookingForm">
                <select id="departmentSelect" class="form-control">
                    <option value="">Choose Department</option>
                    <!-- Populate with departments -->
                </select>
                <select id="doctorSelect" class="form-control">
                    <option value="">Select Doctor</option>
                    <!-- Populate with doctors -->
                </select>
                <input type="date" id="appointmentDate" class="form-control" />
                <input type="time" id="appointmentTime" class="form-control" />
                <button type="submit" class="btn btn-main btn-round-full">Book Appointment</button>
            </form>
        </section>

        <section id="messages">
            <h2>Messages</h2>
            <ul id="messagesList">
                <!-- Messages will be populated here -->
            </ul>
        </section>

        <section id="profile">
            <h2>Profile Information</h2>
            <p id="profileInfo"></p>
            <button id="updateProfile" class="btn btn-main btn-round-full">Update Profile</button>
        </section>

        <section id="medicalHistory">
            <h2>Medical History</h2>
            <ul id="medicalHistoryList">
                <!-- Medical history will be populated here -->
            </ul>
            <button id="downloadMedicalHistory" class="btn btn-main btn-round-full">Download Medical History</button>
        </section>
    </div>
    <script>
document.addEventListener('DOMContentLoaded', function() {
    const token = localStorage.getItem('token');
    const username = localStorage.getItem('username');

    document.getElementById('spinner').style.display = 'block';
    // Fetch and display user info
    fetch('/api/user/profile', {
        headers: {
            'Authorization': `${token}`
        }
    })
    .then(response => response.json())
    .then(data => {
        document.querySelector('h1').innerText = `Welcome, ${username}`;
    });

    // Fetch and display appointments
    fetch('/api/appointment', {
    headers: {
        'Authorization': `${token}`
    }
})
.then(response => response.json())
.then(appointments => {
    const appointmentsList = document.getElementById('appointmentsList');
    appointmentsList.innerHTML = '';
    document.getElementById('spinner').style.display = 'none';
    if (appointments.length === 0) {
        appointmentsList.innerHTML = '<li>No upcoming appointments</li>';
    } else {
        appointments.forEach(appointment => {
            const li = document.createElement('li');
            li.className = 'appointment-card';
            
            const date = new Date(appointment.date);
            const formattedDate = new Intl.DateTimeFormat('en-US', { 
                weekday: 'long', 
                month: 'long', 
                day: 'numeric', 
                year: 'numeric' 
            }).format(date);
            
            const time = new Date(`1970-01-01T${appointment.time}:00`); // Assuming appointment.time is in HH:MM format
            const formattedTime = time.toLocaleTimeString('en-US', { 
                hour: '2-digit', 
                minute: '2-digit', 
                hour12: true 
            });

            li.innerHTML = `
                <div class="card">
                    <div class="card-body">
                        <p><strong>Doctor:</strong> ${appointment.doctor.username}</p>
                        <p><strong>Reason:</strong> ${appointment.message}</p>
                        <p><strong>Date:</strong> ${formattedDate}</p>
                        <p><strong>Time:</strong> ${formattedTime}</p>
                        <!-- <button class="btn btn-main btn-round-full" onclick="openRescheduleModal('${appointment._id}')">Reschedule</button>-->
                    </div>
                </div>
            `;

            appointmentsList.appendChild(li);
        });
    }
});
})
.catch(error => {
    console.error('Error:', error);
    // Hide the spinner if there's an error
    document.getElementById('spinner').style.display = 'none';
});

    // Fetch and display prescriptions
    fetch('/api/prescriptions', {
        headers: {
            'Authorization': `${token}`
        }
    })
    .then(response => response.json())
    .then(prescriptions => {
        const prescriptionsList = document.getElementById('prescriptionsList');
        prescriptionsList.innerHTML = '';
        if (prescriptions.length === 0) {
            prescriptionsList.innerHTML = '<li>No prescriptions yet</li>';
        } else {
            prescriptions.forEach(prescription => {
                const li = document.createElement('li');
                li.innerText = `Medication: ${prescription.medication}, Dosage: ${prescription.dosage}`;
                prescriptionsList.appendChild(li);
            });
        }
    });

    // Populate department and doctor dropdowns
    fetch('/api/departments')
    .then(response => response.json())
    .then(departments => {
        const departmentSelect = document.getElementById('departmentSelect');
        departments.forEach(department => {
            const option = document.createElement('option');
            option.value = department._id;
            option.innerText = department.name;
            departmentSelect.appendChild(option);
        });
    });

    fetch('/api/doctors')
    .then(response => response.json())
    .then(doctors => {
        const doctorSelect = document.getElementById('doctorSelect');
        doctors.forEach(doctor => {
            const option = document.createElement('option');
            option.value = doctor._id;
            option.innerText = doctor.name;
            doctorSelect.appendChild(option);
        });
    });

    // Handle appointment booking form submission
    document.getElementById('bookingForm').addEventListener('submit', function(event) {
        event.preventDefault();

        const departmentId = document.getElementById('departmentSelect').value;
        const doctorId = document.getElementById('doctorSelect').value;
        const date = document.getElementById('appointmentDate').value;
        const time = document.getElementById('appointmentTime').value;

        fetch('/api/appointments', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${token}`
            },
            body: JSON.stringify({
                department: departmentId,
                doctor: doctorId,
                date: date,
                time: time
            })
        })
        .then(response => response.json())
        .then(data => {
            alert('Appointment booked successfully');
            // Refresh appointments list or redirect to a confirmation page
        });
    });

    </script>
    <style>
    body {
        font-family: 'Open Sans', sans-serif;
        background-color: #f7f7f7;
        margin: 0;
        padding: 0;
    }
    
    #patientDashboard {
        max-width: 800px;
        margin: 50px auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }
    
    h1 {
        color: #007bff;
        text-align: center;
        margin-bottom: 20px;
    }
    
    h2 {
        color: #333;
        margin-bottom: 15px;
    }
    
    section {
        margin-bottom: 30px;
    }
    
    .form-control {
        width: 100%;
        padding: 10px;
        margin-bottom: 15px;
        border: 1px solid #ddd;
        border-radius: 5px;
    }
    
    .btn {
        display: inline-block;
        padding: 10px 20px;
        font-size: 16px;
        border-radius: 30px;
        text-decoration: none;
        text-align: center;
    }
    
    .btn-main {
        background-color: #e12454;
        color: #fff;
        border: none;
        cursor: pointer;
    }
    
    .btn-main:hover {
        background-color: #223a66;
    }
    
    .btn-round-full {
        border-radius: 30px;
    }
    
    ul {
        list-style: none;
        padding: 0;
    }
    
    ul li {
        padding: 10px;
        border-bottom: 1px solid #ddd;
    }
    
    ul li:last-child {
        border-bottom: none;
    }
    
    p {
        margin: 10px 0;
    }
    
    .spinner {
    border: 4px solid rgba(0, 0, 0, 0.1);
    border-left: 4px solid #e12454; 
    border-radius: 50%;
    width: 40px;
    height: 40px;
    animation: spin 1s linear infinite;
    margin: auto;
    display: block;
}

/* Animation */
@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

    .appointment-card {
    margin-bottom: 20px;
    padding: 15px;
    border: 1px solid #ddd;
    border-radius: 10px;
    background-color: #fff;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    list-style: none; /* Remove default list item styles */
}

.appointment-card .card {
    padding: 15px;
    border-radius: 8px;
    background-color: #f9f9f9;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.appointment-card .card-body {
    display: flex;
    flex-direction: column;
}

.appointment-card p {
    margin: 5px 0;
}

.appointment-card .btn {
    margin-top: 10px;
}

    </style>
</body>
</html>
